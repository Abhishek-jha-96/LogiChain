# ------------------------------------------------------
# THIS FILE WAS AUTOMATICALLY GENERATED (DO NOT MODIFY)
# ------------------------------------------------------

type User {
  uid: String!
  createdAt: DateTime!
  updatedAt: DateTime!
  name: String
  image: String
  email: String!
}

"""
A date-time string at UTC, such as 2019-12-03T09:54:33Z, compliant with the date-time format.
"""
scalar DateTime

type AuthOutput {
  token: String!
}

type Manufacturer {
  uid: String!
  createdAt: DateTime!
  updatedAt: DateTime!
  user: User!
  products: [Product!]!
  warehouses: [Warehouse!]!
}

type Product {
  description: String
  image: String
  manufacturer: Manufacturer!
  inventories: [Inventory!]!
  transactions: [Transaction!]!
}

type Warehouse {
  description: String
  manufacturerId: String
  distributorId: String
  retailerId: String
  location: Location
  manufacturer: Manufacturer
  distributor: Distributor
  retailer: Retailer
  inventories: [Inventory!]!
  outs: [Transaction!]!
  ins: [Transaction!]!
}

type Distributor {
  uid: String!
  createdAt: DateTime!
  updatedAt: DateTime!
  user: User!
  warehouses: [Warehouse!]!
}

type Retailer {
  updatedAt: DateTime!
  uid: String!
  createdAt: DateTime!
  user: User!
  warehouses: [Warehouse!]!
}

type Inventory {
  id: ID!
  createdAt: DateTime!
  updatedAt: DateTime!
  productId: Int!
  warehouseId: Int!
  quantity: Int!
  product: Product!
  warehouse: Warehouse!
}

type Transaction {
  fromWarehouseId: Int
  toWarehouseId: Int
  product: Product!
  fromWarehouse: Warehouse
  toWarehouse: Warehouse
}

type Location {
  latitude: Float!
  longitude: Float!
  warehouse: Warehouse!
}

type Query {
  users(distinct: [UserScalarFieldEnum!]): [User!]!
  user: User!
  manufacturers(distinct: [ManufacturerScalarFieldEnum!]): [Manufacturer!]!
  manufacturer: Manufacturer!
  distributors(distinct: [DistributorScalarFieldEnum!]): [Distributor!]!
  distributor: Distributor!
  retailers(distinct: [RetailerScalarFieldEnum!]): [Retailer!]!
  retailer: Retailer!
  products(distinct: [ProductScalarFieldEnum!]): [Product!]!
  myProducts(distinct: [ProductScalarFieldEnum!]): [Product!]!
  product: Product!
  warehouses(distinct: [WarehouseScalarFieldEnum!]): [Warehouse!]!
  myWarehouses(distinct: [WarehouseScalarFieldEnum!]): [Warehouse!]!
  warehouse: Warehouse!
  locations(distinct: [LocationScalarFieldEnum!]): [Location!]!
  location: Location!
  inventories(distinct: [InventoryScalarFieldEnum!]): [Inventory!]!
  inventory: Inventory!
  transactions(distinct: [TransactionScalarFieldEnum!]): [Transaction!]!
  transaction: Transaction!
}

enum UserScalarFieldEnum {
  uid
  createdAt
  updatedAt
  name
  image
}

enum ManufacturerScalarFieldEnum {
  uid
  createdAt
  updatedAt
}

enum DistributorScalarFieldEnum {
  uid
  createdAt
  updatedAt
}

enum RetailerScalarFieldEnum {
  uid
  createdAt
  updatedAt
}

enum ProductScalarFieldEnum {
  id
  createdAt
  updatedAt
  name
  description
  image
  manufacturerId
}

enum WarehouseScalarFieldEnum {
  id
  createdAt
  updatedAt
  name
  description
  manufacturerId
  distributorId
  retailerId
}

enum LocationScalarFieldEnum {
  id
  latitude
  longitude
  address
  warehouseId
}

enum InventoryScalarFieldEnum {
  id
  createdAt
  updatedAt
  productId
  warehouseId
  quantity
}

enum TransactionScalarFieldEnum {
  id
  createdAt
  updatedAt
  productId
  fromWarehouseId
  toWarehouseId
}

type Mutation {
  registerWithProvider(registerWithProviderInput: RegisterWithProviderInput!): AuthOutput!
  registerWithCredentials(registerWithCredentialsInput: RegisterWithCredentialsInput!): AuthOutput!
  login(loginInput: LoginInput!): AuthOutput!
  updateUser(updateUserInput: UpdateUserInput!): User!
  removeUser: User!
  createManufacturer(createManufacturerInput: CreateManufacturerInput!): Manufacturer!
  updateManufacturer(updateManufacturerInput: UpdateManufacturerInput!): Manufacturer!
  removeManufacturer: Manufacturer!
  createDistributor(createDistributorInput: CreateDistributorInput!): Distributor!
  updateDistributor(updateDistributorInput: UpdateDistributorInput!): Distributor!
  removeDistributor: Distributor!
  createRetailer(createRetailerInput: CreateRetailerInput!): Retailer!
  updateRetailer(updateRetailerInput: UpdateRetailerInput!): Retailer!
  removeRetailer: Retailer!
  createProduct(createProductInput: CreateProductInput!): Product!
  updateProduct(updateProductInput: UpdateProductInput!): Product!
  removeProduct: Product!
  createWarehouse(createWarehouseInput: CreateWarehouseInput!): Warehouse!
  updateWarehouse(updateWarehouseInput: UpdateWarehouseInput!): Warehouse!
  removeWarehouse: Warehouse!
  createLocation(createLocationInput: CreateLocationInput!): Location!
  updateLocation(updateLocationInput: UpdateLocationInput!): Location!
  removeLocation: Location!
  createInventory(createInventoryInput: CreateInventoryInput!): Inventory!
  transferInventory(fromWarehouseId: Int!, toWarehouseId: Int!, productId: Int!, quantity: Int!): Inventory!
  updateInventory(updateInventoryInput: UpdateInventoryInput!): Inventory!
  removeInventory: Inventory!
  reduceInventory(warehouseId: Int!, productId: Int!, quantity: Int!): Inventory!
  createTransaction(createTransactionInput: CreateTransactionInput!): Transaction!
  updateTransaction(updateTransactionInput: UpdateTransactionInput!): Transaction!
  removeTransaction: Transaction!
}

input RegisterWithProviderInput {
  uid: String!
  name: String
  image: String
  type: AuthProviderType!
}

enum AuthProviderType {
  GOOGLE
  CREDENTIALS
}

input RegisterWithCredentialsInput {
  name: String
  image: String
}

input LoginInput {
  email: String!
}

input UpdateUserInput {
  uid: String!
}

input CreateManufacturerInput {
  uid: String!
}

input UpdateManufacturerInput {
  uid: String
}

input CreateDistributorInput {
  uid: String!
}

input UpdateDistributorInput {
  uid: String
}

input CreateRetailerInput {
  uid: String!
}

input UpdateRetailerInput {
  uid: String
}

input CreateProductInput {
  description: String
  image: String
}

input UpdateProductInput {
  description: String
  image: String
}

input CreateWarehouseInput {
  description: String
  manufacturerId: String
  distributorId: String
  retailerId: String
}

input UpdateWarehouseInput {
  description: String
  manufacturerId: String
  distributorId: String
  retailerId: String
}

input CreateLocationInput {
  latitude: Float!
  longitude: Float!
}

input UpdateLocationInput {
  latitude: Float
  longitude: Float
}

input CreateInventoryInput {
  productId: Int!
  warehouseId: Int!
  quantity: Int!
}

input UpdateInventoryInput {
  productId: Int
  warehouseId: Int
  quantity: Int
  id: ID!
}

input CreateTransactionInput {
  fromWarehouseId: Int
  toWarehouseId: Int
}

input UpdateTransactionInput {
  fromWarehouseId: Int
  toWarehouseId: Int
}